{
  "hash": "03003fb06c90eb63e0bb35c804b22f42",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nTitle: Appendix - Commands\n---\n\n# Appendix - Commands\n\n## Python\n\n\n- Python can be used within the Python prompt, prefixed with `>>>`, or via `.py` files.\n- Python is used to conduct computations.\n- Versus a calculator, it supports arithmetic, comparisons, code reuse, and repeated actions.\n\n## \n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n$$\nf(x) =\n\\begin{cases}\n  9x^2 + 5 & x < 4 \\\\\n  9 & 4 \\leq x \\leq 8 \\\\\n  2 - x & x > 8\n\\end{cases}\n$$\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {#4c4565dc .cell execution_count=1}\n``` {.python .cell-code}\ndef f(x):\n    if (x < 4):\n        return 9 * x ** 2 + 5\n    elif (4 <= x <= 8):\n        return 9\n    elif (x > 8):\n        return 2 - x\n```\n:::\n\n\n:::\n\n::::\n\n## \n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n- Find $f(x)$ for each of the following $x$ values:\n$$\n\\{-1, 4, 5, 8, 11\\}\n$$\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {#06550bad .cell execution_count=2}\n``` {.python .cell-code}\nresult = []\nfor x in [-1, 4, 5, 8, 11]:\n    result = result + [f(x)]\nresult\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n[14, 9, 9, 9, -9]\n```\n:::\n:::\n\n\n:::\n\n::::\n\n## Neovim\n\n- Use  `nvim` to access a *modal* text editor.\n- In `i` or insert mode, is like other editors.\n- Outside `i` there's \"motions\", \"operators\", \"commands\"\n\t- \"Motions\" move the cursor - where you would type in `i` mode\n\t- \"Operators\" manipulate text - add, delete, yank (copy), paste\n\t- \"Commands\" load and save files and exit Neovim.\n\n## {.smaller}\n\n|Motion|Movement|\n|-------|------|\n|`h`| left one character |\n|`j`| down one line|\n|`k`| up one line|\n|`l`| right one character|\n|`0`| beginning of line |\n|`$`| end of line |\n|`/search_term` | go to next occurance of \"search_term\" |\n|`e`| end of word |\n|`b`| beginning of word |\n\n## {.smaller}\n\n:::: {.columns}\n\n::: {.column width=\"49%\"}\n\n|Operator|Action|\n|-------|------|\n|`i`| insert text |\n|`r`| replace character |\n|`d`| delete text, combined with a motion |\n|`y`| yank text, combined with a motion |\n|`p`| paste yanked text |\n\n:::\n\n::: {.column width=\"2%\"}\n\n:::\n\n::: {.column width=\"49%\"}\n\n|Command|Action|\n|-------|------|\n|`:saveas file.txt`| save text as \"file.txt\"|\n|`:w`| save file |\n|`:x`| save and exit |\n|`:q!` | exit without saving |:::: {.columns}\n\n:::\n\n## Bash\n\n- Bash commands are used folder-relative.\n- Bash is used within a terminal and is the default terminal environment.\n- To get bash running:\n\t- Windows: Check [Appendix - Git Bash](A0_gitbash.qmd)\n\t- MacOS: Spotlight menu -> \"Terminal\" (zsh, but close enough)\n- Mostly used to navigate the file system, organize files, launch programs like Python and Neovim\n\n## {.smaller}\n\n|Command|Action|\n|-------|------|\n|`ls`| list files in folder |\n|`rm f.txt`| delete file \"f.txt\"|\n|`mkdir dir`| create a new folder named \"dir\"|\n|`mv f.txt dir`| move file \"f.txt\" to folder \"dir\"|\n|`pwd`| print current folder |\n|`cd dir`| change current folder to \"dir\"|\n|`cd ..` | go to \"parent\" folder |\n|`echo hi`| print the text \"hi\"|\n|`echo hi >f.txt`| write \"hi\" to file \"f.txt\"|\n|`cat f.txt`| see the text in f.txt|\n\n::::\n\n",
    "supporting": [
      "A1_keybinds_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}